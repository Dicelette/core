{
	"$schema": "http://json-schema.org/draft-07/schema#",
	"definitions": {
		"Critical": {
			"description": "If the result can be considered as a critical\nCritical is compared to the \"natural\" dice result, so any modifier doesn't count",
			"properties": {
				"failure": {
					"description": "The value that will be considered as a failure.\nCan only be compared strictly with the natural dice result",
					"type": "integer"
				},
				"success": {
					"description": "The value that will be considered as a success\nCan only be compared strictly with the natural dice result",
					"type": "integer"
				}
			},
			"type": "object"
		},
		"Record<string,CustomCritical>": {
			"type": "object",
			"additionalProperties": {
				"properties": {
					"affectSkill": {
						"description": "If the critical affect the skill dice (aka dbd commands)",
						"type": "boolean"
					},
					"onNaturalDice": {
						"description": "If the critical is only on the natural dice and not the total.",
						"type": "boolean"
					},
					"sign": {
						"description": "The sign of the comparaison",
						"enum": ["=", "<", ">", "<=", ">="],
						"type": "string"
					},
					"value": {
						"description": "The value of the critical. Can be a formule, includes other dice, includes statistiques with $ or their name.",
						"type": "string"
					}
				},
				"type": "object"
			}
		},
		"Record<string,string>": {
			"type": "object"
		}
	},
	"properties": {
		"$schema": {
			"description": "Specifies the URL for the schema definition\nThis property is optional and should contain a valid URI.",
			"type": "string"
		},
		"charName": {
			"description": "Allow to force the user to choose a name for them characters",
			"type": "boolean"
		},
		"critical": {
			"$ref": "#/definitions/Critical",
			"description": "How the success/echec will be done"
		},
		"customCritical": {
			"$ref": "#/definitions/Record<string,CustomCritical>",
			"description": "Custom critical, allow to adjust the critical on a statistic, and set multiple critical value",
			"maximum": 22
		},
		"damage": {
			"$ref": "#/definitions/Record<string,string>",
			"description": "Special dice for damage",
			"maximum": 25
		},
		"diceType": {
			"description": "A dice type in the notation supported by the bot",
			"type": "string"
		},
		"statistics": {
			"additionalProperties": {
				"properties": {
					"combinaison": {
						"description": "The combinaison that can be made with ANOTHER statistic\nAutomatically disable the max/min value",
						"type": "string"
					},
					"max": {
						"description": "The value of the statistic that can take the stats",
						"type": "integer"
					},
					"min": {
						"description": "The minimal value of the statistic that can take the stats",
						"type": "integer"
					}
				},
				"type": "object"
			},
			"description": "The statistics that can be used in the dice throw",
			"maximum": 25,
			"type": "object"
		},
		"total": {
			"description": "A total can be set, it allows to calculate the total value of a future register member\nIf the sum of the value > total, the bot will send a message to the user to inform him that the total is exceeded and an error will be thrown",
			"type": "integer"
		}
	},
	"type": "object"
}
